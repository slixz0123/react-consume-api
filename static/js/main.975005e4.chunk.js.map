{"version":3,"sources":["services/ProductService.js","contexts/ProductContext.jsx","components/ProductForm.jsx","components/ProductList.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductService","baseUrl","product","axios","post","this","then","res","data","get","put","_id","id","delete","ProductContext","createContext","ProductContextProvider","props","productService","useState","products","setProducts","editProduct","setEditProduct","useEffect","readAll","Provider","value","createProduct","create","deleteProduct","filter","p","findProduct","find","updateProduct","update","map","children","ProductForm","isVisible","setIsVisible","useContext","initialProductState","name","price","expiry_date","productData","setProductData","updateField","field","console","log","dialogFooter","className","label","icon","onClick","visible","modal","style","width","contentStyle","overflow","header","onHide","footer","onChange","e","target","trim","mode","currency","Date","toISOString","substring","dateFormat","ProductList","float","textAlign","selectionMode","onSelectionChange","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.975005e4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport class ProductService {\n\n    // baseUrl = \"http://localhost:8080/api/products/\";\n    baseUrl = \"https://camilocrud.herokuapp.com/api/products/\";\n\n\n    create(product){\n        return axios.post(this.baseUrl+\"product/\", product).then(res => res.data);\n    }\n\n    readAll(){\n        return axios.get(this.baseUrl).then(res => res.data);\n    }\n\n    update(product){\n        return axios.put(this.baseUrl+\"product/\"+product._id, product).then(res => res.data);\n    }\n\n    delete(id){\n        return axios.delete(this.baseUrl+\"product/\"+id).then(res => res.data);\n    }\n}","import React, { createContext, useState, useEffect } from \"react\";\nimport { ProductService } from \"../services/ProductService\";\n\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = (props) => {\n  const productService = new ProductService();\n\n  const [products, setProducts] = useState([]);\n\n  const [editProduct, setEditProduct] = useState(null);\n\n  useEffect(() => {\n    productService.readAll().then((data) => setProducts(data));\n  }, []);\n\n  const createProduct = (product) => {\n    productService\n      .create(product)\n      .then((data) => setProducts([...products, data]));\n  };\n\n  const deleteProduct = (id) => {\n    productService\n      .delete(id)\n      .then(() => setProducts(products.filter((p) => p._id !== id)));\n  };\n\n  const findProduct = (id) => {\n    const product = products.find((p) => p._id === id);\n\n    setEditProduct(product);\n  };\n\n  const updateProduct = (product) => {\n    productService\n      .update(product)\n      .then((data) =>\n        setProducts(\n          products.map((p) => (p._id === product._id ? data : product))\n        )\n      );\n\n    setEditProduct(null);\n  };\n\n  return (\n    <ProductContext.Provider\n      value={{\n        createProduct,\n        deleteProduct,\n        findProduct,\n        updateProduct,\n        editProduct,\n        products,\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n\nexport default ProductContextProvider;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ProductContext } from \"../contexts/ProductContext\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { Calendar } from \"primereact/calendar\";\n\nconst ProductForm = (props) => {\n  const { isVisible, setIsVisible } = props;\n\n  const {\n    createProduct,\n    deleteProduct,\n    editProduct,\n    updateProduct,\n  } = useContext(ProductContext);\n\n  const initialProductState = {\n    _id: null,\n    name: \"\",\n    price: 0,\n    expiry_date: null,\n  };\n\n  const [productData, setProductData] = useState(initialProductState);\n\n  useEffect(() => {\n    if (editProduct) setProductData(editProduct);\n  }, [editProduct]);\n\n  const updateField = (data, field) => {\n    setProductData({\n      ...productData,\n      [field]: data,\n    });\n\n    console.log(productData);\n  };\n\n  const _deleteProduct = () => {\n    if (editProduct) {\n      deleteProduct(productData._id);\n      setProductData(initialProductState);\n    }\n    setIsVisible(false);\n  };\n\n  const saveProduct = () => {\n    if (!editProduct) {\n      createProduct(productData);\n    } else {\n      updateProduct(productData);\n    }\n    setProductData(initialProductState);\n    setIsVisible(false);\n  };\n\n  const dialogFooter = (\n    <div className=\"ui-dialog-buttonpane p-clearfix\">\n      <Button label=\"Delete\" icon=\"pi pi-times\" onClick={_deleteProduct} />\n      <Button label=\"Save\" icon=\"pi pi-check\" onClick={saveProduct} />\n    </div>\n  );\n\n  const clearSelected = () => {\n    setIsVisible(false);\n    setProductData(initialProductState);\n  };\n\n  return (\n    <div>\n      <Dialog\n        visible={isVisible}\n        modal={true}\n        style={{ width: \"420px\" }}\n        contentStyle={{ overflow: \"visible\" }}\n        header=\"Detalles del Producto\"\n        onHide={() => clearSelected()}\n        footer={dialogFooter}\n      >\n        <div className=\"p-grid p-fluid\">\n          <br />\n          <div className=\"p-float-label\">\n            <InputText\n              value={productData.name}\n              onChange={(e) => updateField(e.target.value.trim(), \"name\")}\n            />\n            <label>Nombre:</label>\n          </div>\n          <br />\n          <div className=\"p-float-label\">\n            <InputNumber\n              value={productData.price}\n              onChange={(e) => updateField(e.target.value, \"price\")}\n              mode=\"currency\"\n              currency=\"USD\"\n            />\n            <label>Precio:</label>\n          </div>\n          <br />\n          <div className=\"p-float-label\">\n            <Calendar\n              value={\n                productData.expiry_date &&\n                new Date(productData.expiry_date + \" \")\n              }\n              onChange={(e) =>\n                updateField(\n                  e.target.value.toISOString().substring(0, 10),\n                  \"expiry_date\"\n                )\n              }\n              dateFormat=\"yy-mm-dd\"\n            />\n            <label>Fecha de caducidad:</label>\n          </div>\n          <br />\n        </div>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ProductForm;\n","import React, { useContext, useState } from \"react\";\nimport { Panel } from \"primereact/panel\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Button } from \"primereact/button\";\nimport { ProductContext } from \"../contexts/ProductContext\";\nimport ProductForm from \"./ProductForm\";\n\nconst ProductList = () => {\n  const { products, findProduct } = useContext(ProductContext);\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const saveProduct = (id) => {\n    findProduct(id);\n    setIsVisible(true);\n  };\n\n  const footer = (\n    <div className=\"p-clearfix\" style={{ width: \"100%\" }}>\n      <Button\n        style={{ float: \"left\" }}\n        icon=\"pi pi-plus\"\n        label=\"Add\"\n        onClick={() => setIsVisible(true)}\n      />\n    </div>\n  );\n\n  return (\n    <div>\n      <Panel header=\"LISTA DE PRODUCTOS\" style={{ textAlign: \"center\" }}>\n        <DataTable\n          value={products}\n          selectionMode=\"single\"\n          onSelectionChange={(e) => saveProduct(e.value._id)}\n          footer={footer}\n        >\n          <Column field=\"_id\" header=\"Id\" />\n          <Column field=\"name\" header=\"Nombre\" />\n          <Column field=\"price\" header=\"Precio\" />\n          <Column field=\"expiry_date\" header=\"Fecha de Caducidad\" />\n        </DataTable>\n      </Panel>\n      <ProductForm isVisible={isVisible} setIsVisible={setIsVisible} />\n    </div>\n  );\n};\n\nexport default ProductList;\n","import React from 'react';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport ProductContextProvider from './contexts/ProductContext';\nimport ProductList from './components/ProductList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ProductContextProvider>\n            <ProductList/>\n        </ProductContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}